diff --git a/hadoop-common-project/hadoop-common/pom.xml b/hadoop-common-project/hadoop-common/pom.xml
index 9c7657b53afc..e0f9a5cd0991 100644
--- a/hadoop-common-project/hadoop-common/pom.xml
+++ b/hadoop-common-project/hadoop-common/pom.xml
@@ -398,6 +398,12 @@
       <artifactId>lz4-java</artifactId>
       <scope>provided</scope>
     </dependency>
+    <dependency>
+      <groupId>edu.illinois</groupId>
+      <artifactId>ctest-runner-junit4</artifactId>
+      <version>1.0-SNAPSHOT</version>
+      <scope>compile</scope>
+    </dependency>
   </dependencies>
 
   <build>
diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java
index d0c7cce75e94..e16287bf5543 100755
--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java
+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java
@@ -111,6 +111,8 @@
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
 
+import edu.illinois.ConfigTracker;
+
 import static org.apache.commons.lang3.StringUtils.isBlank;
 import static org.apache.commons.lang3.StringUtils.isNotBlank;
 
@@ -1241,9 +1243,11 @@ String getProperty(String key) {
    *         or null if no such property exists.
    */
   public String get(String name) {
+    ConfigTracker.markParamAsUsed(name);
     String[] names = handleDeprecation(deprecationContext.get(), name);
     String result = null;
     for(String n : names) {
+      ConfigTracker.markParamAsUsed(n);
       result = substituteVars(getProps().getProperty(n));
     }
     return result;
@@ -1398,6 +1402,7 @@ public void set(String name, String value) {
    * @throws IllegalArgumentException when the value or name is null.
    */
   public void set(String name, String value, String source) {
+    ConfigTracker.markParmaAsSet(name);
     Preconditions.checkArgument(
         name != null,
         "Property name must not be null");
@@ -1419,6 +1424,7 @@ public void set(String name, String value, String source) {
       if(altNames != null) {
         for(String n: altNames) {
           if(!n.equals(name)) {
+            ConfigTracker.markParmaAsSet(name);
             getOverlay().setProperty(n, value);
             getProps().setProperty(n, value);
             putIntoUpdatingResource(n, new String[] {newSource});
@@ -1430,6 +1436,7 @@ public void set(String name, String value, String source) {
       String[] names = handleDeprecation(deprecationContext.get(), name);
       String altSource = "because " + name + " is deprecated";
       for(String n : names) {
+        ConfigTracker.markParmaAsSet(name);
         getOverlay().setProperty(n, value);
         getProps().setProperty(n, value);
         putIntoUpdatingResource(n, new String[] {altSource});
@@ -1502,9 +1509,11 @@ private synchronized Properties getOverlay() {
    *         doesn't exist.                    
    */
   public String get(String name, String defaultValue) {
+    ConfigTracker.markParamAsUsed(name);
     String[] names = handleDeprecation(deprecationContext.get(), name);
     String result = null;
     for(String n : names) {
+      ConfigTracker.markParamAsUsed(name);
       result = substituteVars(getProps().getProperty(n, defaultValue));
     }
     return result;
diff --git a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/TestKeyShell.java b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/TestKeyShell.java
index c4026d30e07d..e729c82883f8 100644
--- a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/TestKeyShell.java
+++ b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/TestKeyShell.java
@@ -35,6 +35,10 @@
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
 
+import org.junit.runner.RunWith;
+import edu.illinois.CTestJUnit4Runner;
+
+@RunWith(CTestJUnit4Runner.class)
 public class TestKeyShell {
   private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();
   private final ByteArrayOutputStream errContent = new ByteArrayOutputStream();
